dbName = "dfs://stock_lv2_snapshot"
tbName = "snapshot"

beginDate = 2022.01.01 
endDate = 2022.01.10 
ds = replayDS(<select * from loadTable(dbName, tbName) where TradeDate between beginDate and endDate>, dateColumn="TradeDate", timeColumn="TradeTime")

dbName = "dfs://stock_lv2_snapshot"
tbName = "snapshot"
streamTbName = "snap2"

// 请确保没有同名流表，如有请修改表名
// 若需要重复执行该脚本，可执行此步取消订阅删除流表
try{
    actName = exec actions from getStreamingStat().pubTables where tableName = streamTbName
    hp = exec subscriber from getStreamingStat().pubTables where tableName = streamTbName
    host = hp[0].split(":")[0]
    port = hp[0].split(":")[1].int()
    stopPublishTable(host, port, streamTbName, actName[0])

}catch(ex){
    print ex
}

try{
    dropStreamTable(streamTbName)
}catch(ex){
    print ex
}

// 定义一个持久化流表 snap2 接收流数据
colName=loadTable(dbName, tbName).schema().colDefs.name
colType=loadTable(dbName, tbName).schema().colDefs.typeString
t = streamTable(100:0, colName, colType);
enableTableShareAndPersistence(table=t, tableName=streamTbName, cacheSize=100000)
go
// （非必要）设置过滤列，若不需要过滤可以删去该脚本
setStreamTableFilterColumn(snap2, 'SecurityID')