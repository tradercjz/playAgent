

```DolphinDB
### mimaxLast

#### 语法
```DolphinDB
mimaxLast(X, window, [minPeriods])
```

#### 参数
- `X`：输入的向量、矩阵或表
- `window`：窗口长度（元素个数或时间长度）
- `minPeriods`：可选参数，窗口内最小计算元素个数（默认与`window`一致）

#### 详情
在指定长度的滑动窗口内计算 `X` 中最大元素的**位置**。若存在多个相同最大值，返回右起第一个最大值的位置。计算时忽略 NULL 值。

#### 示例

##### 向量计算
```DolphinDB
x = 1.2 2 NULL -1 6 -1
mimaxLast(x, 3);
// 输出：[,,1,0,2,1]
```

##### 矩阵计算
```DolphinDB
m = matrix(3 2 4 4 2, 1 4 2 4 3)
mimaxLast(m, 3) 
/*
#0 | #1
---|---
  | 
  | 
2 | 1  
2 | 2  
1 | 1  
*/
```

##### 表计算
```DolphinDB
t = table(3 3 2 as c1, 1 4 4 as c2)
mimaxLast(t, 3)
/*
#0 | #1
---|---
  | 
  | 
1 | 2  
*/
```

##### 时间序列计算
```DolphinDB
x = [NULL, 2, NULL, NULL, 3.2]
date = [0, 1, 3, 8, 9] + 2020.01.01
X = indexedSeries(date, x) 
mimaxLast(X, 3d)
/*
           | #0
-----------|----
2020.01.01 | -1
2020.01.02 | 1 
2020.01.04 | 0 
2020.01.09 | -1
2020.01.10 | 1 
*/
```

#### 相关函数
[mimax](mimax.html)